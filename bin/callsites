#!/usr/bin/env ruby
require 'yaml'

Location = Struct.new(:method_name, :class_name, :line, :file) do
  def match(other)
    (other.method_name.nil? || other.method_name == method_name) &&
      (other.class_name.nil? || other.class_name == class_name) &&
      (other.line.nil? || other.line == line) &&
      (other.file.nil? || other.file == file)
  end

  def pretty_print
    if method_name
      name = "#{class_name}##{method_name}"
    else
      name = '<main>'
    end
    "#{name} at #{file}:#{line}"
  end
end

location = ARGV[0]

if location =~ /:\d+$/
  file, line = location.split ':'
  line = line.to_i
else
  class_name, method_name = location.split '#'
  method_name = method_name.to_sym if method_name
end

target_location = Location.new(method_name, class_name, line, file)

location_data = YAML.load(File.read('callsite-info.yml'))

selection = location_data.select do |key, _callers|
  loc = Location.new(*key)
  loc.match(target_location)
end

selection.each do |key, callers|
  puts "#{Location.new(*key).pretty_print} is called by"
  callers.keys.each do |call_site|
    puts "  #{Location.new(*call_site).pretty_print}"
  end
end
